name: BKM_Web_Scrapping

on: 
  workflow_dispatch:
  #schedule:
  #  - cron: "0 12 * * *" # Herg√ºn saat 00:00 da

jobs:
  Preprocessing:
    runs-on: ubuntu-latest
    outputs:
      output_file:
        value: BKM_other_data/Kategori.csv
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd "mongo --eval 'printjson(db.runCommand({ connectionStatus: 1 }))'" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
        - name: checkout repo content
          uses: actions/checkout@v3 # checkout the repository content
          with:
            path: ${{ github.workspace }}

        - name: checkout repo content
          run: mkdir ${{ github.workspace }}/test # checkout the repository conten

        - name: setup python
          uses: actions/setup-python@v4
          with:
            python-version: "3.9" # install the python version needed

        - name: install python packages
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        
        - name: Kategori Olustur # run main.py
          run: python Scripts/bkm_categori_list_create.py

Pre_processing:
    name: Web Scraping Node ID - ${{ matrix.N_ID }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        N_ID: ["1", "2","3","4","5"]
    steps:

        - name: checkout repo content
          uses: actions/checkout@v3 # checkout the repository content
          with:
            path: ${{ github.workspace }}

        - name: checkout repo content
          run: mkdir ${{ github.workspace }}/test # checkout the repository conten

        - name: setup python
          uses: actions/setup-python@v4
          with:
            python-version: "3.9" # install the python version needed

        - name: install python packages
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        
        - name: Dawnload Dataset # run main.py
          env:
            # Kaggle API auth
            KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
            KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
            DATASET_PATH: ${{ vars.BKM_KAGGLE_DATASET_PATH }}
          run: python Scripts/dataset_import.py

        - name: Ping mongodb
          run: ping 127.0.0.1:27017

  


      
